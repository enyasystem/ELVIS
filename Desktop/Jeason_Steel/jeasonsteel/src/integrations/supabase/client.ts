
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://eybfjesxbgazvhwtaskl.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImV5YmZqZXN4YmdhenZod3Rhc2tsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzY5MDM5MDEsImV4cCI6MjA1MjQ3OTkwMX0.OKu_tONVx-D9C5nG0V0zDb2i8iZ3tFdVtnV9HSNw1vU";

// Export the URL and key so they can be used elsewhere
export { SUPABASE_URL };

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
    },
    global: {
      headers: {
        'x-client-info': 'lovable-website'
      },
    },
  }
);

// Check if we're in a browser environment
if (typeof window !== 'undefined') {
  // Add debug info to window for troubleshooting
  (window as any).supabaseDebug = {
    checkConnection: async () => {
      try {
        const { data, error } = await supabase.from('products').select('count(*)');
        return { success: !error, data, error };
      } catch (e) {
        return { success: false, error: e };
      }
    },
    createBucket: async () => {
      try {
        const { data, error } = await supabase.storage.createBucket('products', { public: true });
        return { success: !error, data, error };
      } catch (e) {
        return { success: false, error: e };
      }
    },
    listBuckets: async () => {
      try {
        const { data, error } = await supabase.storage.listBuckets();
        return { success: !error, data, error };
      } catch (e) {
        return { success: false, error: e };
      }
    }
  };
}
